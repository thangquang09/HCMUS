n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
print(DATA)
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
mean_diff = numeric(lenth=R)
numeric(lenth=1000)
numeric(length=1000)
numeric(length=1000)
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
print(mean_diff[i])
}
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 2, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
print(mean_diff[i])
}
result <- c(meanA, meanB)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 2, alter = "left")
# print p-value
res[2]
# print p-value
res[2]
# print p-value
res[2]
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p-value <- -1
if (alter == "left") {
p-value <- mean(mean_diff < meanA - meanB)
}
result <- c(meanA, meanB, p-value)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 2, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p-value <- mean(mean_diff < meanA - meanB)
}
result <- c(meanA, meanB, p_value)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 2, alter = "left")
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
result <- c(meanA, meanB, p_value)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 2, alter = "left")
# print p-value
res[2]
# ---- BÀI TẬP 1.2 ----
data_12 <- read_csv("datasets/Beerwings.csv")
# print p-value
res[3]
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[3]
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
result <- c(mean_diff, meanA, meanB, p_value)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[4]
# print p-value
res[4]
# print p-value
res[4]
# print p-value
res[4]
# print p-value
res[3]
# print p-value
res[3]
# print p-value
res[2]
# print p-value
res[1]
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
result <- c(mean_diff, meanA, meanB, p_value)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
# print p-value
res[]
res[-1]
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
res[-1]
# print p
result <- p_value
return (result)
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
result <- p_value
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
res
res <- permuatation_test(X, Y, R = 1000, alter = "left")
res# print p-value
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
result <- list(
mean_diff=mean_diff,
meanA = meanA,
meanB = meanB
p_value = p_value
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
res
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
result <- list(
mean_diff=mean_diff,
meanA = meanA,
meanB = meanB,
p_value = p_value
)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "left")
res
# ---- BÀI TẬP 1.3 ----
data_13 <- read_csv("datasets/Verizon.csv")
glimpse(data_13)
data_13 |> group_by(Group) |> summarise(
tb=mean(Time, na.rm=TRUE),
dlc=sd(Time, na.rm = TRUE),
tv=median(Time, na.rm = TRUE),
gtln=max(Time, na.rm = TRUE),
gtnn=min(Time, na.rm = TRUE)
)
permuatation_test <- function(data1, data2, R, alter) {
nA <- length(data1)
nB <- length(data2)
n <- nA + nB
meanA <- mean(data1)
meanB <- mean(data2)
DATA <- c(data1, data2)
mean_diff = numeric(length=R)
for (i in 1:R) {
idx_a = sample(1:n, nA)
idx_b = setdiff(1:n, idx_a)
mean_diff[i] <- mean(DATA[idx_a]) - mean(DATA[idx_b])
}
p_value <- -1
if (alter == "left") {
p_value <- mean(mean_diff < meanA - meanB)
}
else if (alter == "right") {
p_value <- mean(mean_diff > meanA - meanB)
}
else if (alter == "two_sided") {
p_value <- mean(abs(mean_diff) > abs(meanA - meanB))
}
result <- list(
mean_diff=mean_diff,
meanA = meanA,
meanB = meanB,
p_value = p_value
)
return (result)
}
X = data_web$time[data_web$page == "Page A"]
Y = data_web$time[data_web$page == "Page B"]
res <- permuatation_test(X, Y, R = 1000, alter = "two_sided")
res
res
res <- permuatation_test(X, Y, R = 1000, alter = "right")
res <- permuatation_test(X, Y, R = 1000, alter = "right")
res
data_13 |> group_by(Group) |> summarise(
tb=mean(Time, na.rm=TRUE),
dlc=sd(Time, na.rm = TRUE),
tv=median(Time, na.rm = TRUE),
gtln=max(Time, na.rm = TRUE),
gtnn=min(Time, na.rm = TRUE)
)
ggplot(data_13, aes(x=Group, y=Time, fill=Group)) +
geom_violin() +
geom_boxplot(width=0.15) +
scale_fill_manual(breaks=c("CLEC", "ILEC"),
values=c("forestgreen", "skyblue")) +
labs(x="Group",  y = "Time") +
theme_bw() +
theme(legend.position = "none")
ggplot(data_13, aes(x=Group, y=Time, fill=Group)) +
geom_violin() +
geom_boxplot(width=0.15) +
scale_fill_manual(breaks=c("CLEC", "ILEC"),
values=c("forestgreen", "skyblue")) +
labs(x="Group",  y = "Time") +
theme_bw() +
theme(legend.position = "none")
data_13 |> group_by(Group) |> summarise(
tb=mean(Time, na.rm=TRUE),
dlc=sd(Time, na.rm = TRUE),
tv=median(Time, na.rm = TRUE),
gtln=max(Time, na.rm = TRUE),
gtnn=min(Time, na.rm = TRUE)
)
res <- permuatation_test(data1, data2, R=1000, alter="left")
data1 <- data_13$Time[data_13$Group == "ILEC"]
data2 <- data_13$Time[data_13$Group == "CLEC"]
res <- permuatation_test(data1, data2, R=1000, alter="left")
res
data1 <- data_13$Time[data_13$Group == "ILEC"]
data2 <- data_13$Time[data_13$Group == "CLEC"]
res <- permuatation_test(data1, data2, R=1000, alter="right")
res
